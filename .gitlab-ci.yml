image: docker:latest
services:
  - docker:dind

stages:
  - build
  - deploy

variables:
    DOCKER_IMAGE_PATH: "registry.gitlab.com/cloudappi/ninjatalent/ninjatalent-next-front"
    REMOTE_PATH_DEV: "/var/www/aplicacion/ninjatalent-apps/ninjatalent-next-front"
    REMOTE_PATH_PRE: "/var/www/aplicacion/ninjatalent-apps-pre/ninjatalent-next-front"

compose:build:
  stage: build
  environment: $CI_COMMIT_REF_NAME
  before_script:
    - docker login -u $REGISTRY_TOKEN_USERNAME -p $REGISTRY_TOKEN_PASSWORD registry.gitlab.com
  script:
    - echo version:$CI_COMMIT_SHORT_SHA
    - cat Dockerfile | 
        sed -e "s|NEXT_PUBLIC_API_BASE_PATH_VALUE|$NEXT_PUBLIC_API_BASE_PATH|g;" |
        sed -e "s|NEXT_PUBLIC_BASE_PATH_VALUE|$NEXT_PUBLIC_BASE_PATH|g;" |      
        sed -e "s|NEXT_PUBLIC_RECAPTCHA_KEY_VALUE|$NEXT_PUBLIC_RECAPTCHA_KEY|g;" | 
        sed -e "s|NEXT_PUBLIC_SECRET_TOKEN_KEY_VALUE|$NEXT_PUBLIC_SECRET_TOKEN_KEY|g;" |
        sed -e "s|NEXT_PUBLIC_SENTRY_ENV_VALUE|$NEXT_PUBLIC_SENTRY_ENV|g;" |
        sed -e "s|SENTRY_AUTH_TOKEN_VALUE|$SENTRY_AUTH_TOKEN|g;" > DockerfileUpdate   
    - docker build -f DockerfileUpdate -t "${DOCKER_IMAGE_PATH}:$CI_COMMIT_SHORT_SHA" .
    - docker push ${DOCKER_IMAGE_PATH}:$CI_COMMIT_SHORT_SHA
  only:
     refs:
      - develop
      - pre
  
compose:build:pro:
  stage: build
  environment: production
  before_script:
    - docker login -u $REGISTRY_TOKEN_USERNAME -p $REGISTRY_TOKEN_PASSWORD registry.gitlab.com
  script:
    - echo version:$CI_COMMIT_SHORT_SHA
    - cat Dockerfile | 
        sed -e "s|NEXT_PUBLIC_API_BASE_PATH_VALUE|$NEXT_PUBLIC_API_BASE_PATH|g;" |
        sed -e "s|NEXT_PUBLIC_BASE_PATH_VALUE|$NEXT_PUBLIC_BASE_PATH|g;" |      
        sed -e "s|NEXT_PUBLIC_RECAPTCHA_KEY_VALUE|$NEXT_PUBLIC_RECAPTCHA_KEY|g;" | 
        sed -e "s|NEXT_PUBLIC_SECRET_TOKEN_KEY_VALUE|$NEXT_PUBLIC_SECRET_TOKEN_KEY|g;" |
        sed -e "s|NEXT_PUBLIC_SENTRY_ENV_VALUE|$NEXT_PUBLIC_SENTRY_ENV|g;" |
        sed -e "s|SENTRY_AUTH_TOKEN_VALUE|$SENTRY_AUTH_TOKEN|g;" > DockerfileUpdate     
    - docker build -f DockerfileUpdate -t "${DOCKER_IMAGE_PATH}:${CI_COMMIT_TAG}" .
    - docker push ${DOCKER_IMAGE_PATH}:${CI_COMMIT_TAG}
  only:
     refs:
      - /^[0-9]+(\.[0-9]+)+(\.[0-9]+)$/
      
compose:build:evento:
  stage: build
  environment: pre
  before_script:
    - docker login -u $REGISTRY_TOKEN_USERNAME -p $REGISTRY_TOKEN_PASSWORD registry.gitlab.com
  script:
    - echo version:$CI_COMMIT_SHORT_SHA
    - cat Dockerfile | 
        sed -e "s|NEXT_PUBLIC_API_BASE_PATH_VALUE|$NEXT_PUBLIC_API_BASE_PATH|g;" |
        sed -e "s|NEXT_PUBLIC_BASE_PATH_VALUE|$NEXT_PUBLIC_BASE_PATH|g;" |      
        sed -e "s|NEXT_PUBLIC_RECAPTCHA_KEY_VALUE|$NEXT_PUBLIC_RECAPTCHA_KEY|g;" | 
        sed -e "s|NEXT_PUBLIC_SECRET_TOKEN_KEY_VALUE|$NEXT_PUBLIC_SECRET_TOKEN_KEY|g;" |
        sed -e "s|NEXT_PUBLIC_SENTRY_ENV_VALUE|$NEXT_PUBLIC_SENTRY_ENV|g;" |
        sed -e "s|SENTRY_AUTH_TOKEN_VALUE|$SENTRY_AUTH_TOKEN|g;" > DockerfileUpdate     
    - docker build -f DockerfileUpdate -t "${DOCKER_IMAGE_PATH}:${CI_COMMIT_TAG}" .
    - docker push ${DOCKER_IMAGE_PATH}:${CI_COMMIT_TAG}
  only:
     refs:
      - /^[0-9]+(\.[0-9]+)+(\.[0-9]+)-evento.*$/

compose:deploy:
  stage: deploy
  environment: $CI_COMMIT_REF_NAME
  rules:
    - if: $CI_COMMIT_REF_NAME == "develop"
      variables:
        NAMESPACE: ninjatalent-develop
        MANIFEST: develop.yml
    - if: $CI_COMMIT_REF_NAME == "pre"
      variables:
        NAMESPACE: ninjatalent-pre
        MANIFEST: pre.yml
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  before_script: ''
  script:
    - export KUBECONFIG=$KUBECONFIG
    - cat kubernetes/$MANIFEST | sed -e "s|:latest|:$CI_COMMIT_SHORT_SHA|g; s|:\ latest|:\ $CI_COMMIT_SHORT_SHA|g;" | kubectl -n $NAMESPACE apply -f -

compose:deploy:evento:
  stage: deploy
  environment: pre
  variables:
    NAMESPACE: evento
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  before_script: ''
  script:
    - export KUBECONFIG=$KUBECONFIG
    - cat kubernetes/production.yml | sed -e "s|:latest|:$CI_COMMIT_TAG|g; s|:\ latest|:\ $CI_COMMIT_TAG|g;
        s|NEXT_PUBLIC_API_BASE_PATH_VALUE|$NEXT_PUBLIC_API_BASE_PATH|g;
        s|NEXT_PUBLIC_BASE_PATH_VALUE|$NEXT_PUBLIC_BASE_PATH|g;    
        s|NEXT_PUBLIC_RECAPTCHA_KEY_VALUE|$NEXT_PUBLIC_RECAPTCHA_KEY|g; 
        s|NEXT_PUBLIC_SECRET_TOKEN_KEY_VALUE|$NEXT_PUBLIC_SECRET_TOKEN_KEY|g;
        s|NEXT_PUBLIC_SENTRY_ENV_VALUE|$NEXT_PUBLIC_SENTRY_ENV|g; 
        s|SENTRY_AUTH_TOKEN_VALUE|$SENTRY_AUTH_TOKEN|g;" | kubectl -n $NAMESPACE apply -f -
  needs:
    - "compose:build:evento"
  only:
     refs:
      - /^[0-9]+(\.[0-9]+)+(\.[0-9]+)-evento.*$/

compose:deploy:pro:
  stage: deploy
  environment: production
  variables:
    NAMESPACE: ninjatalent
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  before_script: ''
  script:
    - export KUBECONFIG=$KUBECONFIG
    - cat kubernetes/production.yml | sed -e "s|:latest|:$CI_COMMIT_TAG|g; s|:\ latest|:\ $CI_COMMIT_TAG|g;
        s|NEXT_PUBLIC_API_BASE_PATH_VALUE|$NEXT_PUBLIC_API_BASE_PATH|g;
        s|NEXT_PUBLIC_BASE_PATH_VALUE|$NEXT_PUBLIC_BASE_PATH|g;    
        s|NEXT_PUBLIC_RECAPTCHA_KEY_VALUE|$NEXT_PUBLIC_RECAPTCHA_KEY|g; 
        s|NEXT_PUBLIC_SECRET_TOKEN_KEY_VALUE|$NEXT_PUBLIC_SECRET_TOKEN_KEY|g;
        s|NEXT_PUBLIC_SENTRY_ENV_VALUE|$NEXT_PUBLIC_SENTRY_ENV|g; 
        s|SENTRY_AUTH_TOKEN_VALUE|$SENTRY_AUTH_TOKEN|g;" | kubectl -n $NAMESPACE apply -f -
  needs:
    - "compose:build:pro"
  only:
     refs:
      - /^[0-9]+(\.[0-9]+)+(\.[0-9]+)$/
