{"ast":null,"code":"import { Component } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../datos-paises.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nfunction PapaComponent_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const continente_r2 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", continente_r2.valor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(continente_r2.texto);\n  }\n}\nfunction PapaComponent_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pais_r3 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", pais_r3.name.common);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(pais_r3.translations.spa.common);\n  }\n}\nconst urlRegion = \"https://restcountries.com/v3.1/region/\";\nconst urlPais = \"https://restcountries.com/v3.1/name/\";\nexport class PapaComponent {\n  //constructor\n  constructor(datos) {\n    this.datos = datos;\n    //propiedades\n    this.continentes = [{\n      valor: \"europe\",\n      texto: \"Europa\"\n    }, {\n      valor: \"asia\",\n      texto: \"Asia\"\n    }, {\n      valor: \"americas\",\n      texto: \"America\"\n    }, {\n      valor: \"africa\",\n      texto: \"Africa\"\n    }, {\n      valor: \"oceania\",\n      texto: \"Oceania\"\n    }];\n    this.continenteSeleccionado = \"0\";\n    this.error = \"\";\n    this.paises = [];\n    this.nombreDelPaisSeleccionado = \"\";\n    //metodos\n    this.cargarPaises = () => {\n      this.error = \"\";\n      if (this.continenteSeleccionado === \"0\") {\n        this.error = \"Debes seleccionar un continente\";\n        return;\n      }\n      this.datos.getDatos(urlRegion + this.continenteSeleccionado).subscribe(datos => {\n        this.paises = [];\n        datos.forEach(pais => {\n          this.paises.push(pais);\n        });\n        this.paises.sort((a, b) => {\n          return a.translations.spa.common.localeCompare(b.translations.spa.common);\n        });\n      });\n    };\n    this.cargarPais = () => {\n      this.datos.getDatos(urlPais + this.nombreDelPaisSeleccionado).subscribe(datos => {\n        this.paisSeleccionado = datos[0];\n        this.hijo.pais = this.paisSeleccionado;\n      });\n    };\n  }\n  static #_ = this.ɵfac = function PapaComponent_Factory(t) {\n    return new (t || PapaComponent)(i0.ɵɵdirectiveInject(i1.DatosPaisesService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PapaComponent,\n    selectors: [[\"app-papa\"]],\n    viewQuery: function PapaComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(Component, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.hijo = _t.first);\n      }\n    },\n    outputs: {\n      paisSeleccionado: \"paisSeleccionado\"\n    },\n    decls: 21,\n    vars: 5,\n    consts: [[3, \"ngModel\", \"change\", \"ngModelChange\"], [\"value\", \"0\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngModel\", \"ngModelChange\", \"change\"], [\"routerLink\", \"generales\", 1, \"btn\", \"btn-success\"], [\"routerLink\", \"geograficos\", 1, \"btn\", \"btn-success\"], [\"routerLink\", \"todo\", 1, \"btn\", \"btn-success\"], [1, \"text-center\", \"text-danger\"], [3, \"value\"]],\n    template: function PapaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵtext(1, \" Continente:\");\n        i0.ɵɵelementStart(2, \"select\", 0);\n        i0.ɵɵlistener(\"change\", function PapaComponent_Template_select_change_2_listener() {\n          return ctx.cargarPaises();\n        })(\"ngModelChange\", function PapaComponent_Template_select_ngModelChange_2_listener($event) {\n          return ctx.continenteSeleccionado = $event;\n        });\n        i0.ɵɵelementStart(3, \"option\", 1);\n        i0.ɵɵtext(4, \"Selecciona continente...\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, PapaComponent_option_5_Template, 2, 2, \"option\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(6, \" Pais:\");\n        i0.ɵɵelementStart(7, \"select\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function PapaComponent_Template_select_ngModelChange_7_listener($event) {\n          return ctx.nombreDelPaisSeleccionado = $event;\n        })(\"change\", function PapaComponent_Template_select_change_7_listener() {\n          return ctx.cargarPais();\n        });\n        i0.ɵɵelementStart(8, \"option\", 1);\n        i0.ɵɵtext(9, \"Selecciona pais...\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, PapaComponent_option_10_Template, 2, 2, \"option\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"a\", 4);\n        i0.ɵɵtext(12, \"Generales\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"a\", 5);\n        i0.ɵɵtext(14, \"Geograficos\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"a\", 6);\n        i0.ɵɵtext(16, \"Todo\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(17, \"router-outlet\");\n        i0.ɵɵelementStart(18, \"div\")(19, \"h1\", 7);\n        i0.ɵɵtext(20);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.continenteSeleccionado);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.continentes);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.nombreDelPaisSeleccionado);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.paises);\n        i0.ɵɵadvance(10);\n        i0.ɵɵtextInterpolate(ctx.error);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.RouterOutlet, i3.RouterLink, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Component","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵpropertyInterpolate","continente_r2","valor","ɵɵadvance","ɵɵtextInterpolate","texto","pais_r3","name","common","translations","spa","urlRegion","urlPais","PapaComponent","constructor","datos","continentes","continenteSeleccionado","error","paises","nombreDelPaisSeleccionado","cargarPaises","getDatos","subscribe","forEach","pais","push","sort","a","b","localeCompare","cargarPais","paisSeleccionado","hijo","_","ɵɵdirectiveInject","i1","DatosPaisesService","_2","selectors","viewQuery","PapaComponent_Query","rf","ctx","ɵɵlistener","PapaComponent_Template_select_change_2_listener","PapaComponent_Template_select_ngModelChange_2_listener","$event","ɵɵtemplate","PapaComponent_option_5_Template","PapaComponent_Template_select_ngModelChange_7_listener","PapaComponent_Template_select_change_7_listener","PapaComponent_option_10_Template","ɵɵelement","ɵɵproperty"],"sources":["C:\\Users\\jcgar\\OneDrive\\Documentos\\JCGA\\Cursos\\Fundamentos de Programación_LRI\\Curso\\Ejemplos_GIT\\cursoLRZ\\src\\app\\papa\\papa.component.ts","C:\\Users\\jcgar\\OneDrive\\Documentos\\JCGA\\Cursos\\Fundamentos de Programación_LRI\\Curso\\Ejemplos_GIT\\cursoLRZ\\src\\app\\papa\\papa.component.html"],"sourcesContent":["import { Component, Output, ViewChild } from '@angular/core';\r\nimport { Continente } from '../types/Continente';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DatosPaisesService } from '../datos-paises.service';\r\nimport { Pais } from '../types/Pais';\r\nimport { subscribeOn } from 'rxjs';\r\n\r\nconst urlRegion: string = \"https://restcountries.com/v3.1/region/\"\r\nconst urlPais: string = \"https://restcountries.com/v3.1/name/\"\r\n\r\n@Component({\r\n  selector: 'app-papa',\r\n  templateUrl: './papa.component.html',\r\n  styleUrls: ['./papa.component.css']\r\n})\r\nexport class PapaComponent {\r\n  //propiedades\r\n  continentes: Array<Continente> = [{ valor: \"europe\", texto: \"Europa\" }, { valor: \"asia\", texto: \"Asia\" }, { valor: \"americas\", texto: \"America\" }, { valor: \"africa\", texto: \"Africa\" }, { valor: \"oceania\", texto: \"Oceania\" }]\r\n  continenteSeleccionado: string = \"0\"\r\n  @ViewChild(Component) hijo: any;\r\n  error: string = \"\"\r\n  @Output() paisSeleccionado: Pais | undefined //se declara como undefined pq aun no sabemos el pais\r\n  paises: Array<Pais> = []\r\n  nombreDelPaisSeleccionado: string = \"\"\r\n  //constructor\r\n  constructor(private datos: DatosPaisesService) { }\r\n\r\n  //metodos\r\n  cargarPaises = () => {\r\n    this.error = \"\"\r\n    if (this.continenteSeleccionado === \"0\") {\r\n      this.error = \"Debes seleccionar un continente\"\r\n      return\r\n    }\r\n    this.datos.getDatos(urlRegion + this.continenteSeleccionado).subscribe((datos: Array<Pais>) => {\r\n      this.paises = []\r\n      datos.forEach((pais: Pais) => {\r\n        this.paises.push(pais)\r\n      })\r\n      this.paises.sort((a: Pais, b: Pais) => {\r\n        return a.translations.spa.common.localeCompare(b.translations.spa.common)\r\n      })\r\n    })\r\n  }\r\n\r\n  cargarPais = () => {\r\n    this.datos.getDatos(urlPais + this.nombreDelPaisSeleccionado).subscribe((datos: Array<Pais>) => {\r\n      this.paisSeleccionado = datos[0];\r\n      this.hijo.pais=this.paisSeleccionado;\r\n    })\r\n  }\r\n}\r\n","<div>\r\n    Continente:<select (change)=\"cargarPaises()\" [(ngModel)]=\"continenteSeleccionado\">\r\n        <option value=\"0\">Selecciona continente...</option>\r\n        <option *ngFor=\"let continente of continentes\" value=\"{{continente.valor}}\">{{continente.texto}}</option>\r\n    </select>\r\n    Pais:<select [(ngModel)]=\"nombreDelPaisSeleccionado\" (change)=\"cargarPais()\">\r\n        <option value=\"0\" >Selecciona pais...</option>\r\n        <option *ngFor=\"let pais of paises\" value=\"{{pais.name.common}}\">{{pais.translations.spa.common}}</option>\r\n    </select>\r\n   <a class=\"btn btn-success\" routerLink=\"generales\">Generales</a>\r\n   <a class=\"btn btn-success\" routerLink=\"geograficos\">Geograficos</a>\r\n   <a class=\"btn btn-success\" routerLink=\"todo\">Todo</a>\r\n    <!-- el atributo de entrada entre corchetes\r\n    <app-generales [pais]=\"paisSeleccionado\"></app-generales>-->\r\n</div>\r\n<router-outlet></router-outlet>\r\n<div>\r\n    <h1 class=\"text-center text-danger\">{{error}}</h1>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}